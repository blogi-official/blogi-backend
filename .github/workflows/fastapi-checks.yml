name: FastAPI Code Quality Checks

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "main"
      - "develop"

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v3
        with:
          key: poetry-2.0.0
          path: ~/.local/

      - name: Install Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Register Poetry bin
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Cache dependencies
        id: cache-venv
        uses: actions/cache@v3
        with:
          key: python-${{ steps.setup-python.outputs.python-version }}-poetry-lock-${{ hashFiles('fastapi_app/poetry.lock') }}-toml-${{ hashFiles('fastapi_app/pyproject.toml') }}-poetry-2.0.0
          path: ~/.cache/pypoetry/virtualenvs/

      - name: Install dependencies
        working-directory: fastapi_app
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-root

      - name: Run isort (Import sorting)
        working-directory: fastapi_app
        run: poetry run isort . --check --diff

      - name: Run black (Code formatting)
        working-directory: fastapi_app
        run: poetry run black . --check

      - name: Set multiline environment variable
        working-directory: fastapi_app
        run: |
          mkdir -p envs
          echo "${{ secrets.FASTAPI_ENVS }}" > envs/.local.env

      - name: Run Mypy
        working-directory: fastapi_app
        run: poetry run mypy .

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Register Poetry bin
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH

      - name: Install dependencies
        working-directory: fastapi_app
        run: poetry install --no-root

      - name: Set envs
        working-directory: fastapi_app
        run: |
          mkdir -p envs
          echo "${{ secrets.FASTAPI_ENVS }}" > envs/.local.env

      # Todo
      # - name: Run pytest
      #   working-directory: fastapi_app
      #   run: poetry run pytest


